### YamlMime:XRefMap
sorted: true
references:
- uid: WinForge
  name: WinForge
  href: api/WinForge.html
  commentId: N:WinForge
  fullName: WinForge
  nameWithType: WinForge
- uid: WinForge.Base
  name: WinForge.Base
  href: api/WinForge.Base.html
  commentId: N:WinForge.Base
  fullName: WinForge.Base
  nameWithType: WinForge.Base
- uid: WinForge.Base.ModuleLoader
  name: ModuleLoader
  href: api/WinForge.Base.ModuleLoader.html
  commentId: T:WinForge.Base.ModuleLoader
  fullName: WinForge.Base.ModuleLoader
  nameWithType: ModuleLoader
- uid: WinForge.Base.ModuleLoader.LoadModules(System.String)
  name: LoadModules(string)
  href: api/WinForge.Base.ModuleLoader.html#WinForge_Base_ModuleLoader_LoadModules_System_String_
  commentId: M:WinForge.Base.ModuleLoader.LoadModules(System.String)
  name.vb: LoadModules(String)
  fullName: WinForge.Base.ModuleLoader.LoadModules(string)
  fullName.vb: WinForge.Base.ModuleLoader.LoadModules(String)
  nameWithType: ModuleLoader.LoadModules(string)
  nameWithType.vb: ModuleLoader.LoadModules(String)
- uid: WinForge.Base.ModuleLoader.LoadModules*
  name: LoadModules
  href: api/WinForge.Base.ModuleLoader.html#WinForge_Base_ModuleLoader_LoadModules_
  commentId: Overload:WinForge.Base.ModuleLoader.LoadModules
  isSpec: "True"
  fullName: WinForge.Base.ModuleLoader.LoadModules
  nameWithType: ModuleLoader.LoadModules
- uid: WinForge.Common
  name: WinForge.Common
  href: api/WinForge.Common.html
  commentId: N:WinForge.Common
  fullName: WinForge.Common
  nameWithType: WinForge.Common
- uid: WinForge.Common.Logger
  name: Logger
  href: api/WinForge.Common.Logger.html
  commentId: T:WinForge.Common.Logger
  fullName: WinForge.Common.Logger
  nameWithType: Logger
- uid: WinForge.Common.Logger.Debug(System.String)
  name: Debug(string)
  href: api/WinForge.Common.Logger.html#WinForge_Common_Logger_Debug_System_String_
  commentId: M:WinForge.Common.Logger.Debug(System.String)
  name.vb: Debug(String)
  fullName: WinForge.Common.Logger.Debug(string)
  fullName.vb: WinForge.Common.Logger.Debug(String)
  nameWithType: Logger.Debug(string)
  nameWithType.vb: Logger.Debug(String)
- uid: WinForge.Common.Logger.Debug*
  name: Debug
  href: api/WinForge.Common.Logger.html#WinForge_Common_Logger_Debug_
  commentId: Overload:WinForge.Common.Logger.Debug
  isSpec: "True"
  fullName: WinForge.Common.Logger.Debug
  nameWithType: Logger.Debug
- uid: WinForge.Common.Logger.EnableFileLogging(System.String)
  name: EnableFileLogging(string)
  href: api/WinForge.Common.Logger.html#WinForge_Common_Logger_EnableFileLogging_System_String_
  commentId: M:WinForge.Common.Logger.EnableFileLogging(System.String)
  name.vb: EnableFileLogging(String)
  fullName: WinForge.Common.Logger.EnableFileLogging(string)
  fullName.vb: WinForge.Common.Logger.EnableFileLogging(String)
  nameWithType: Logger.EnableFileLogging(string)
  nameWithType.vb: Logger.EnableFileLogging(String)
- uid: WinForge.Common.Logger.EnableFileLogging*
  name: EnableFileLogging
  href: api/WinForge.Common.Logger.html#WinForge_Common_Logger_EnableFileLogging_
  commentId: Overload:WinForge.Common.Logger.EnableFileLogging
  isSpec: "True"
  fullName: WinForge.Common.Logger.EnableFileLogging
  nameWithType: Logger.EnableFileLogging
- uid: WinForge.Common.Logger.Error(System.String)
  name: Error(string)
  href: api/WinForge.Common.Logger.html#WinForge_Common_Logger_Error_System_String_
  commentId: M:WinForge.Common.Logger.Error(System.String)
  name.vb: Error(String)
  fullName: WinForge.Common.Logger.Error(string)
  fullName.vb: WinForge.Common.Logger.Error(String)
  nameWithType: Logger.Error(string)
  nameWithType.vb: Logger.Error(String)
- uid: WinForge.Common.Logger.Error*
  name: Error
  href: api/WinForge.Common.Logger.html#WinForge_Common_Logger_Error_
  commentId: Overload:WinForge.Common.Logger.Error
  isSpec: "True"
  fullName: WinForge.Common.Logger.Error
  nameWithType: Logger.Error
- uid: WinForge.Common.Logger.Info(System.String)
  name: Info(string)
  href: api/WinForge.Common.Logger.html#WinForge_Common_Logger_Info_System_String_
  commentId: M:WinForge.Common.Logger.Info(System.String)
  name.vb: Info(String)
  fullName: WinForge.Common.Logger.Info(string)
  fullName.vb: WinForge.Common.Logger.Info(String)
  nameWithType: Logger.Info(string)
  nameWithType.vb: Logger.Info(String)
- uid: WinForge.Common.Logger.Info*
  name: Info
  href: api/WinForge.Common.Logger.html#WinForge_Common_Logger_Info_
  commentId: Overload:WinForge.Common.Logger.Info
  isSpec: "True"
  fullName: WinForge.Common.Logger.Info
  nameWithType: Logger.Info
- uid: WinForge.Common.Logger.InitializeAsync
  name: InitializeAsync()
  href: api/WinForge.Common.Logger.html#WinForge_Common_Logger_InitializeAsync
  commentId: M:WinForge.Common.Logger.InitializeAsync
  fullName: WinForge.Common.Logger.InitializeAsync()
  nameWithType: Logger.InitializeAsync()
- uid: WinForge.Common.Logger.InitializeAsync*
  name: InitializeAsync
  href: api/WinForge.Common.Logger.html#WinForge_Common_Logger_InitializeAsync_
  commentId: Overload:WinForge.Common.Logger.InitializeAsync
  isSpec: "True"
  fullName: WinForge.Common.Logger.InitializeAsync
  nameWithType: Logger.InitializeAsync
- uid: WinForge.Common.Logger.Log(System.String,WinForge.Common.Logger.LogLevel,System.String,System.Boolean)
  name: Log(string, LogLevel, string?, bool)
  href: api/WinForge.Common.Logger.html#WinForge_Common_Logger_Log_System_String_WinForge_Common_Logger_LogLevel_System_String_System_Boolean_
  commentId: M:WinForge.Common.Logger.Log(System.String,WinForge.Common.Logger.LogLevel,System.String,System.Boolean)
  name.vb: Log(String, LogLevel, String, Boolean)
  fullName: WinForge.Common.Logger.Log(string, WinForge.Common.Logger.LogLevel, string?, bool)
  fullName.vb: WinForge.Common.Logger.Log(String, WinForge.Common.Logger.LogLevel, String, Boolean)
  nameWithType: Logger.Log(string, Logger.LogLevel, string?, bool)
  nameWithType.vb: Logger.Log(String, Logger.LogLevel, String, Boolean)
- uid: WinForge.Common.Logger.Log*
  name: Log
  href: api/WinForge.Common.Logger.html#WinForge_Common_Logger_Log_
  commentId: Overload:WinForge.Common.Logger.Log
  isSpec: "True"
  fullName: WinForge.Common.Logger.Log
  nameWithType: Logger.Log
- uid: WinForge.Common.Logger.LogLevel
  name: Logger.LogLevel
  href: api/WinForge.Common.Logger.LogLevel.html
  commentId: T:WinForge.Common.Logger.LogLevel
  fullName: WinForge.Common.Logger.LogLevel
  nameWithType: Logger.LogLevel
- uid: WinForge.Common.Logger.LogLevel.Debug
  name: Debug
  href: api/WinForge.Common.Logger.LogLevel.html#WinForge_Common_Logger_LogLevel_Debug
  commentId: F:WinForge.Common.Logger.LogLevel.Debug
  fullName: WinForge.Common.Logger.LogLevel.Debug
  nameWithType: Logger.LogLevel.Debug
- uid: WinForge.Common.Logger.LogLevel.Error
  name: Error
  href: api/WinForge.Common.Logger.LogLevel.html#WinForge_Common_Logger_LogLevel_Error
  commentId: F:WinForge.Common.Logger.LogLevel.Error
  fullName: WinForge.Common.Logger.LogLevel.Error
  nameWithType: Logger.LogLevel.Error
- uid: WinForge.Common.Logger.LogLevel.Info
  name: Info
  href: api/WinForge.Common.Logger.LogLevel.html#WinForge_Common_Logger_LogLevel_Info
  commentId: F:WinForge.Common.Logger.LogLevel.Info
  fullName: WinForge.Common.Logger.LogLevel.Info
  nameWithType: Logger.LogLevel.Info
- uid: WinForge.Common.Logger.LogLevel.Plugin
  name: Plugin
  href: api/WinForge.Common.Logger.LogLevel.html#WinForge_Common_Logger_LogLevel_Plugin
  commentId: F:WinForge.Common.Logger.LogLevel.Plugin
  fullName: WinForge.Common.Logger.LogLevel.Plugin
  nameWithType: Logger.LogLevel.Plugin
- uid: WinForge.Common.Logger.LogLevel.Warning
  name: Warning
  href: api/WinForge.Common.Logger.LogLevel.html#WinForge_Common_Logger_LogLevel_Warning
  commentId: F:WinForge.Common.Logger.LogLevel.Warning
  fullName: WinForge.Common.Logger.LogLevel.Warning
  nameWithType: Logger.LogLevel.Warning
- uid: WinForge.Common.Logger.Warn(System.String)
  name: Warn(string)
  href: api/WinForge.Common.Logger.html#WinForge_Common_Logger_Warn_System_String_
  commentId: M:WinForge.Common.Logger.Warn(System.String)
  name.vb: Warn(String)
  fullName: WinForge.Common.Logger.Warn(string)
  fullName.vb: WinForge.Common.Logger.Warn(String)
  nameWithType: Logger.Warn(string)
  nameWithType.vb: Logger.Warn(String)
- uid: WinForge.Common.Logger.Warn*
  name: Warn
  href: api/WinForge.Common.Logger.html#WinForge_Common_Logger_Warn_
  commentId: Overload:WinForge.Common.Logger.Warn
  isSpec: "True"
  fullName: WinForge.Common.Logger.Warn
  nameWithType: Logger.Warn
- uid: WinForge.IModule
  name: IModule
  href: api/WinForge.IModule.html
  commentId: T:WinForge.IModule
  fullName: WinForge.IModule
  nameWithType: IModule
- uid: WinForge.IModule.Initialize
  name: Initialize()
  href: api/WinForge.IModule.html#WinForge_IModule_Initialize
  commentId: M:WinForge.IModule.Initialize
  fullName: WinForge.IModule.Initialize()
  nameWithType: IModule.Initialize()
- uid: WinForge.IModule.Initialize*
  name: Initialize
  href: api/WinForge.IModule.html#WinForge_IModule_Initialize_
  commentId: Overload:WinForge.IModule.Initialize
  isSpec: "True"
  fullName: WinForge.IModule.Initialize
  nameWithType: IModule.Initialize
- uid: WinForge.IModule.Name
  name: Name
  href: api/WinForge.IModule.html#WinForge_IModule_Name
  commentId: P:WinForge.IModule.Name
  fullName: WinForge.IModule.Name
  nameWithType: IModule.Name
- uid: WinForge.IModule.Name*
  name: Name
  href: api/WinForge.IModule.html#WinForge_IModule_Name_
  commentId: Overload:WinForge.IModule.Name
  isSpec: "True"
  fullName: WinForge.IModule.Name
  nameWithType: IModule.Name
- uid: WinForge.IModule.Status
  name: Status
  href: api/WinForge.IModule.html#WinForge_IModule_Status
  commentId: P:WinForge.IModule.Status
  fullName: WinForge.IModule.Status
  nameWithType: IModule.Status
- uid: WinForge.IModule.Status*
  name: Status
  href: api/WinForge.IModule.html#WinForge_IModule_Status_
  commentId: Overload:WinForge.IModule.Status
  isSpec: "True"
  fullName: WinForge.IModule.Status
  nameWithType: IModule.Status
- uid: WinForge.IModule.Version
  name: Version
  href: api/WinForge.IModule.html#WinForge_IModule_Version
  commentId: P:WinForge.IModule.Version
  fullName: WinForge.IModule.Version
  nameWithType: IModule.Version
- uid: WinForge.IModule.Version*
  name: Version
  href: api/WinForge.IModule.html#WinForge_IModule_Version_
  commentId: Overload:WinForge.IModule.Version
  isSpec: "True"
  fullName: WinForge.IModule.Version
  nameWithType: IModule.Version
- uid: WinForge.IPC
  name: WinForge.IPC
  href: api/WinForge.IPC.html
  commentId: N:WinForge.IPC
  fullName: WinForge.IPC
  nameWithType: WinForge.IPC
- uid: WinForge.IPC.Client
  name: Client
  href: api/WinForge.IPC.Client.html
  commentId: T:WinForge.IPC.Client
  fullName: WinForge.IPC.Client
  nameWithType: Client
- uid: WinForge.IPC.Client.RegisterListener(System.String,System.EventHandler{WinForge.IPC.MessageReceivedEventArgs})
  name: RegisterListener(string, EventHandler<MessageReceivedEventArgs>)
  href: api/WinForge.IPC.Client.html#WinForge_IPC_Client_RegisterListener_System_String_System_EventHandler_WinForge_IPC_MessageReceivedEventArgs__
  commentId: M:WinForge.IPC.Client.RegisterListener(System.String,System.EventHandler{WinForge.IPC.MessageReceivedEventArgs})
  name.vb: RegisterListener(String, EventHandler(Of MessageReceivedEventArgs))
  fullName: WinForge.IPC.Client.RegisterListener(string, System.EventHandler<WinForge.IPC.MessageReceivedEventArgs>)
  fullName.vb: WinForge.IPC.Client.RegisterListener(String, System.EventHandler(Of WinForge.IPC.MessageReceivedEventArgs))
  nameWithType: Client.RegisterListener(string, EventHandler<MessageReceivedEventArgs>)
  nameWithType.vb: Client.RegisterListener(String, EventHandler(Of MessageReceivedEventArgs))
- uid: WinForge.IPC.Client.RegisterListener*
  name: RegisterListener
  href: api/WinForge.IPC.Client.html#WinForge_IPC_Client_RegisterListener_
  commentId: Overload:WinForge.IPC.Client.RegisterListener
  isSpec: "True"
  fullName: WinForge.IPC.Client.RegisterListener
  nameWithType: Client.RegisterListener
- uid: WinForge.IPC.Client.SendMessageAsync(WinForge.IPC.IPCMessage)
  name: SendMessageAsync(IPCMessage)
  href: api/WinForge.IPC.Client.html#WinForge_IPC_Client_SendMessageAsync_WinForge_IPC_IPCMessage_
  commentId: M:WinForge.IPC.Client.SendMessageAsync(WinForge.IPC.IPCMessage)
  fullName: WinForge.IPC.Client.SendMessageAsync(WinForge.IPC.IPCMessage)
  nameWithType: Client.SendMessageAsync(IPCMessage)
- uid: WinForge.IPC.Client.SendMessageAsync*
  name: SendMessageAsync
  href: api/WinForge.IPC.Client.html#WinForge_IPC_Client_SendMessageAsync_
  commentId: Overload:WinForge.IPC.Client.SendMessageAsync
  isSpec: "True"
  fullName: WinForge.IPC.Client.SendMessageAsync
  nameWithType: Client.SendMessageAsync
- uid: WinForge.IPC.Client.Shutdown(System.String)
  name: Shutdown(string)
  href: api/WinForge.IPC.Client.html#WinForge_IPC_Client_Shutdown_System_String_
  commentId: M:WinForge.IPC.Client.Shutdown(System.String)
  name.vb: Shutdown(String)
  fullName: WinForge.IPC.Client.Shutdown(string)
  fullName.vb: WinForge.IPC.Client.Shutdown(String)
  nameWithType: Client.Shutdown(string)
  nameWithType.vb: Client.Shutdown(String)
- uid: WinForge.IPC.Client.Shutdown*
  name: Shutdown
  href: api/WinForge.IPC.Client.html#WinForge_IPC_Client_Shutdown_
  commentId: Overload:WinForge.IPC.Client.Shutdown
  isSpec: "True"
  fullName: WinForge.IPC.Client.Shutdown
  nameWithType: Client.Shutdown
- uid: WinForge.IPC.Client.UnregisterListener(System.String,System.EventHandler{WinForge.IPC.MessageReceivedEventArgs})
  name: UnregisterListener(string, EventHandler<MessageReceivedEventArgs>)
  href: api/WinForge.IPC.Client.html#WinForge_IPC_Client_UnregisterListener_System_String_System_EventHandler_WinForge_IPC_MessageReceivedEventArgs__
  commentId: M:WinForge.IPC.Client.UnregisterListener(System.String,System.EventHandler{WinForge.IPC.MessageReceivedEventArgs})
  name.vb: UnregisterListener(String, EventHandler(Of MessageReceivedEventArgs))
  fullName: WinForge.IPC.Client.UnregisterListener(string, System.EventHandler<WinForge.IPC.MessageReceivedEventArgs>)
  fullName.vb: WinForge.IPC.Client.UnregisterListener(String, System.EventHandler(Of WinForge.IPC.MessageReceivedEventArgs))
  nameWithType: Client.UnregisterListener(string, EventHandler<MessageReceivedEventArgs>)
  nameWithType.vb: Client.UnregisterListener(String, EventHandler(Of MessageReceivedEventArgs))
- uid: WinForge.IPC.Client.UnregisterListener*
  name: UnregisterListener
  href: api/WinForge.IPC.Client.html#WinForge_IPC_Client_UnregisterListener_
  commentId: Overload:WinForge.IPC.Client.UnregisterListener
  isSpec: "True"
  fullName: WinForge.IPC.Client.UnregisterListener
  nameWithType: Client.UnregisterListener
- uid: WinForge.IPC.HTTPManager
  name: HTTPManager
  href: api/WinForge.IPC.HTTPManager.html
  commentId: T:WinForge.IPC.HTTPManager
  fullName: WinForge.IPC.HTTPManager
  nameWithType: HTTPManager
- uid: WinForge.IPC.HTTPManager.ConnectAsync(System.Net.IPEndPoint,System.String,System.Int32)
  name: ConnectAsync(IPEndPoint, string, int)
  href: api/WinForge.IPC.HTTPManager.html#WinForge_IPC_HTTPManager_ConnectAsync_System_Net_IPEndPoint_System_String_System_Int32_
  commentId: M:WinForge.IPC.HTTPManager.ConnectAsync(System.Net.IPEndPoint,System.String,System.Int32)
  name.vb: ConnectAsync(IPEndPoint, String, Integer)
  fullName: WinForge.IPC.HTTPManager.ConnectAsync(System.Net.IPEndPoint, string, int)
  fullName.vb: WinForge.IPC.HTTPManager.ConnectAsync(System.Net.IPEndPoint, String, Integer)
  nameWithType: HTTPManager.ConnectAsync(IPEndPoint, string, int)
  nameWithType.vb: HTTPManager.ConnectAsync(IPEndPoint, String, Integer)
- uid: WinForge.IPC.HTTPManager.ConnectAsync*
  name: ConnectAsync
  href: api/WinForge.IPC.HTTPManager.html#WinForge_IPC_HTTPManager_ConnectAsync_
  commentId: Overload:WinForge.IPC.HTTPManager.ConnectAsync
  isSpec: "True"
  fullName: WinForge.IPC.HTTPManager.ConnectAsync
  nameWithType: HTTPManager.ConnectAsync
- uid: WinForge.IPC.HTTPManager.Dispose
  name: Dispose()
  href: api/WinForge.IPC.HTTPManager.html#WinForge_IPC_HTTPManager_Dispose
  commentId: M:WinForge.IPC.HTTPManager.Dispose
  fullName: WinForge.IPC.HTTPManager.Dispose()
  nameWithType: HTTPManager.Dispose()
- uid: WinForge.IPC.HTTPManager.Dispose*
  name: Dispose
  href: api/WinForge.IPC.HTTPManager.html#WinForge_IPC_HTTPManager_Dispose_
  commentId: Overload:WinForge.IPC.HTTPManager.Dispose
  isSpec: "True"
  fullName: WinForge.IPC.HTTPManager.Dispose
  nameWithType: HTTPManager.Dispose
- uid: WinForge.IPC.HTTPManager.GetConnectedTCPClientPipeNames
  name: GetConnectedTCPClientPipeNames()
  href: api/WinForge.IPC.HTTPManager.html#WinForge_IPC_HTTPManager_GetConnectedTCPClientPipeNames
  commentId: M:WinForge.IPC.HTTPManager.GetConnectedTCPClientPipeNames
  fullName: WinForge.IPC.HTTPManager.GetConnectedTCPClientPipeNames()
  nameWithType: HTTPManager.GetConnectedTCPClientPipeNames()
- uid: WinForge.IPC.HTTPManager.GetConnectedTCPClientPipeNames*
  name: GetConnectedTCPClientPipeNames
  href: api/WinForge.IPC.HTTPManager.html#WinForge_IPC_HTTPManager_GetConnectedTCPClientPipeNames_
  commentId: Overload:WinForge.IPC.HTTPManager.GetConnectedTCPClientPipeNames
  isSpec: "True"
  fullName: WinForge.IPC.HTTPManager.GetConnectedTCPClientPipeNames
  nameWithType: HTTPManager.GetConnectedTCPClientPipeNames
- uid: WinForge.IPC.HTTPManager.ListenForBeaconAsync(System.Int32)
  name: ListenForBeaconAsync(int)
  href: api/WinForge.IPC.HTTPManager.html#WinForge_IPC_HTTPManager_ListenForBeaconAsync_System_Int32_
  commentId: M:WinForge.IPC.HTTPManager.ListenForBeaconAsync(System.Int32)
  name.vb: ListenForBeaconAsync(Integer)
  fullName: WinForge.IPC.HTTPManager.ListenForBeaconAsync(int)
  fullName.vb: WinForge.IPC.HTTPManager.ListenForBeaconAsync(Integer)
  nameWithType: HTTPManager.ListenForBeaconAsync(int)
  nameWithType.vb: HTTPManager.ListenForBeaconAsync(Integer)
- uid: WinForge.IPC.HTTPManager.ListenForBeaconAsync*
  name: ListenForBeaconAsync
  href: api/WinForge.IPC.HTTPManager.html#WinForge_IPC_HTTPManager_ListenForBeaconAsync_
  commentId: Overload:WinForge.IPC.HTTPManager.ListenForBeaconAsync
  isSpec: "True"
  fullName: WinForge.IPC.HTTPManager.ListenForBeaconAsync
  nameWithType: HTTPManager.ListenForBeaconAsync
- uid: WinForge.IPC.HTTPManager.SendToClient(System.String,WinForge.IPC.IPCMessage)
  name: SendToClient(string, IPCMessage)
  href: api/WinForge.IPC.HTTPManager.html#WinForge_IPC_HTTPManager_SendToClient_System_String_WinForge_IPC_IPCMessage_
  commentId: M:WinForge.IPC.HTTPManager.SendToClient(System.String,WinForge.IPC.IPCMessage)
  name.vb: SendToClient(String, IPCMessage)
  fullName: WinForge.IPC.HTTPManager.SendToClient(string, WinForge.IPC.IPCMessage)
  fullName.vb: WinForge.IPC.HTTPManager.SendToClient(String, WinForge.IPC.IPCMessage)
  nameWithType: HTTPManager.SendToClient(string, IPCMessage)
  nameWithType.vb: HTTPManager.SendToClient(String, IPCMessage)
- uid: WinForge.IPC.HTTPManager.SendToClient*
  name: SendToClient
  href: api/WinForge.IPC.HTTPManager.html#WinForge_IPC_HTTPManager_SendToClient_
  commentId: Overload:WinForge.IPC.HTTPManager.SendToClient
  isSpec: "True"
  fullName: WinForge.IPC.HTTPManager.SendToClient
  nameWithType: HTTPManager.SendToClient
- uid: WinForge.IPC.HTTPManager.StartServer(System.String)
  name: StartServer(string)
  href: api/WinForge.IPC.HTTPManager.html#WinForge_IPC_HTTPManager_StartServer_System_String_
  commentId: M:WinForge.IPC.HTTPManager.StartServer(System.String)
  name.vb: StartServer(String)
  fullName: WinForge.IPC.HTTPManager.StartServer(string)
  fullName.vb: WinForge.IPC.HTTPManager.StartServer(String)
  nameWithType: HTTPManager.StartServer(string)
  nameWithType.vb: HTTPManager.StartServer(String)
- uid: WinForge.IPC.HTTPManager.StartServer*
  name: StartServer
  href: api/WinForge.IPC.HTTPManager.html#WinForge_IPC_HTTPManager_StartServer_
  commentId: Overload:WinForge.IPC.HTTPManager.StartServer
  isSpec: "True"
  fullName: WinForge.IPC.HTTPManager.StartServer
  nameWithType: HTTPManager.StartServer
- uid: WinForge.IPC.HTTPManager.WaitForBeaconAsync(System.Int32,System.Threading.CancellationToken)
  name: WaitForBeaconAsync(int, CancellationToken)
  href: api/WinForge.IPC.HTTPManager.html#WinForge_IPC_HTTPManager_WaitForBeaconAsync_System_Int32_System_Threading_CancellationToken_
  commentId: M:WinForge.IPC.HTTPManager.WaitForBeaconAsync(System.Int32,System.Threading.CancellationToken)
  name.vb: WaitForBeaconAsync(Integer, CancellationToken)
  fullName: WinForge.IPC.HTTPManager.WaitForBeaconAsync(int, System.Threading.CancellationToken)
  fullName.vb: WinForge.IPC.HTTPManager.WaitForBeaconAsync(Integer, System.Threading.CancellationToken)
  nameWithType: HTTPManager.WaitForBeaconAsync(int, CancellationToken)
  nameWithType.vb: HTTPManager.WaitForBeaconAsync(Integer, CancellationToken)
- uid: WinForge.IPC.HTTPManager.WaitForBeaconAsync*
  name: WaitForBeaconAsync
  href: api/WinForge.IPC.HTTPManager.html#WinForge_IPC_HTTPManager_WaitForBeaconAsync_
  commentId: Overload:WinForge.IPC.HTTPManager.WaitForBeaconAsync
  isSpec: "True"
  fullName: WinForge.IPC.HTTPManager.WaitForBeaconAsync
  nameWithType: HTTPManager.WaitForBeaconAsync
- uid: WinForge.IPC.IPCMessage
  name: IPCMessage
  href: api/WinForge.IPC.IPCMessage.html
  commentId: T:WinForge.IPC.IPCMessage
  fullName: WinForge.IPC.IPCMessage
  nameWithType: IPCMessage
- uid: WinForge.IPC.IPCMessage.#ctor(System.String,System.String,System.String,System.Object[])
  name: IPCMessage(string, string, string, object[]?)
  href: api/WinForge.IPC.IPCMessage.html#WinForge_IPC_IPCMessage__ctor_System_String_System_String_System_String_System_Object___
  commentId: M:WinForge.IPC.IPCMessage.#ctor(System.String,System.String,System.String,System.Object[])
  name.vb: New(String, String, String, Object())
  fullName: WinForge.IPC.IPCMessage.IPCMessage(string, string, string, object[]?)
  fullName.vb: WinForge.IPC.IPCMessage.New(String, String, String, Object())
  nameWithType: IPCMessage.IPCMessage(string, string, string, object[]?)
  nameWithType.vb: IPCMessage.New(String, String, String, Object())
- uid: WinForge.IPC.IPCMessage.#ctor*
  name: IPCMessage
  href: api/WinForge.IPC.IPCMessage.html#WinForge_IPC_IPCMessage__ctor_
  commentId: Overload:WinForge.IPC.IPCMessage.#ctor
  isSpec: "True"
  name.vb: New
  fullName: WinForge.IPC.IPCMessage.IPCMessage
  fullName.vb: WinForge.IPC.IPCMessage.New
  nameWithType: IPCMessage.IPCMessage
  nameWithType.vb: IPCMessage.New
- uid: WinForge.IPC.IPCMessage.Data
  name: Data
  href: api/WinForge.IPC.IPCMessage.html#WinForge_IPC_IPCMessage_Data
  commentId: P:WinForge.IPC.IPCMessage.Data
  fullName: WinForge.IPC.IPCMessage.Data
  nameWithType: IPCMessage.Data
- uid: WinForge.IPC.IPCMessage.Data*
  name: Data
  href: api/WinForge.IPC.IPCMessage.html#WinForge_IPC_IPCMessage_Data_
  commentId: Overload:WinForge.IPC.IPCMessage.Data
  isSpec: "True"
  fullName: WinForge.IPC.IPCMessage.Data
  nameWithType: IPCMessage.Data
- uid: WinForge.IPC.IPCMessage.From
  name: From
  href: api/WinForge.IPC.IPCMessage.html#WinForge_IPC_IPCMessage_From
  commentId: P:WinForge.IPC.IPCMessage.From
  fullName: WinForge.IPC.IPCMessage.From
  nameWithType: IPCMessage.From
- uid: WinForge.IPC.IPCMessage.From*
  name: From
  href: api/WinForge.IPC.IPCMessage.html#WinForge_IPC_IPCMessage_From_
  commentId: Overload:WinForge.IPC.IPCMessage.From
  isSpec: "True"
  fullName: WinForge.IPC.IPCMessage.From
  nameWithType: IPCMessage.From
- uid: WinForge.IPC.IPCMessage.Message
  name: Message
  href: api/WinForge.IPC.IPCMessage.html#WinForge_IPC_IPCMessage_Message
  commentId: P:WinForge.IPC.IPCMessage.Message
  fullName: WinForge.IPC.IPCMessage.Message
  nameWithType: IPCMessage.Message
- uid: WinForge.IPC.IPCMessage.Message*
  name: Message
  href: api/WinForge.IPC.IPCMessage.html#WinForge_IPC_IPCMessage_Message_
  commentId: Overload:WinForge.IPC.IPCMessage.Message
  isSpec: "True"
  fullName: WinForge.IPC.IPCMessage.Message
  nameWithType: IPCMessage.Message
- uid: WinForge.IPC.IPCMessage.Timestamp
  name: Timestamp
  href: api/WinForge.IPC.IPCMessage.html#WinForge_IPC_IPCMessage_Timestamp
  commentId: P:WinForge.IPC.IPCMessage.Timestamp
  fullName: WinForge.IPC.IPCMessage.Timestamp
  nameWithType: IPCMessage.Timestamp
- uid: WinForge.IPC.IPCMessage.Timestamp*
  name: Timestamp
  href: api/WinForge.IPC.IPCMessage.html#WinForge_IPC_IPCMessage_Timestamp_
  commentId: Overload:WinForge.IPC.IPCMessage.Timestamp
  isSpec: "True"
  fullName: WinForge.IPC.IPCMessage.Timestamp
  nameWithType: IPCMessage.Timestamp
- uid: WinForge.IPC.IPCMessage.To
  name: To
  href: api/WinForge.IPC.IPCMessage.html#WinForge_IPC_IPCMessage_To
  commentId: P:WinForge.IPC.IPCMessage.To
  fullName: WinForge.IPC.IPCMessage.To
  nameWithType: IPCMessage.To
- uid: WinForge.IPC.IPCMessage.To*
  name: To
  href: api/WinForge.IPC.IPCMessage.html#WinForge_IPC_IPCMessage_To_
  commentId: Overload:WinForge.IPC.IPCMessage.To
  isSpec: "True"
  fullName: WinForge.IPC.IPCMessage.To
  nameWithType: IPCMessage.To
- uid: WinForge.IPC.MessageReceivedEventArgs
  name: MessageReceivedEventArgs
  href: api/WinForge.IPC.MessageReceivedEventArgs.html
  commentId: T:WinForge.IPC.MessageReceivedEventArgs
  fullName: WinForge.IPC.MessageReceivedEventArgs
  nameWithType: MessageReceivedEventArgs
- uid: WinForge.IPC.MessageReceivedEventArgs.From
  name: From
  href: api/WinForge.IPC.MessageReceivedEventArgs.html#WinForge_IPC_MessageReceivedEventArgs_From
  commentId: P:WinForge.IPC.MessageReceivedEventArgs.From
  fullName: WinForge.IPC.MessageReceivedEventArgs.From
  nameWithType: MessageReceivedEventArgs.From
- uid: WinForge.IPC.MessageReceivedEventArgs.From*
  name: From
  href: api/WinForge.IPC.MessageReceivedEventArgs.html#WinForge_IPC_MessageReceivedEventArgs_From_
  commentId: Overload:WinForge.IPC.MessageReceivedEventArgs.From
  isSpec: "True"
  fullName: WinForge.IPC.MessageReceivedEventArgs.From
  nameWithType: MessageReceivedEventArgs.From
- uid: WinForge.IPC.MessageReceivedEventArgs.Message
  name: Message
  href: api/WinForge.IPC.MessageReceivedEventArgs.html#WinForge_IPC_MessageReceivedEventArgs_Message
  commentId: P:WinForge.IPC.MessageReceivedEventArgs.Message
  fullName: WinForge.IPC.MessageReceivedEventArgs.Message
  nameWithType: MessageReceivedEventArgs.Message
- uid: WinForge.IPC.MessageReceivedEventArgs.Message*
  name: Message
  href: api/WinForge.IPC.MessageReceivedEventArgs.html#WinForge_IPC_MessageReceivedEventArgs_Message_
  commentId: Overload:WinForge.IPC.MessageReceivedEventArgs.Message
  isSpec: "True"
  fullName: WinForge.IPC.MessageReceivedEventArgs.Message
  nameWithType: MessageReceivedEventArgs.Message
- uid: WinForge.IPC.PipeMessenger
  name: PipeMessenger
  href: api/WinForge.IPC.PipeMessenger.html
  commentId: T:WinForge.IPC.PipeMessenger
  fullName: WinForge.IPC.PipeMessenger
  nameWithType: PipeMessenger
- uid: WinForge.IPC.PipeMessenger.#ctor(System.String)
  name: PipeMessenger(string)
  href: api/WinForge.IPC.PipeMessenger.html#WinForge_IPC_PipeMessenger__ctor_System_String_
  commentId: M:WinForge.IPC.PipeMessenger.#ctor(System.String)
  name.vb: New(String)
  fullName: WinForge.IPC.PipeMessenger.PipeMessenger(string)
  fullName.vb: WinForge.IPC.PipeMessenger.New(String)
  nameWithType: PipeMessenger.PipeMessenger(string)
  nameWithType.vb: PipeMessenger.New(String)
- uid: WinForge.IPC.PipeMessenger.#ctor*
  name: PipeMessenger
  href: api/WinForge.IPC.PipeMessenger.html#WinForge_IPC_PipeMessenger__ctor_
  commentId: Overload:WinForge.IPC.PipeMessenger.#ctor
  isSpec: "True"
  name.vb: New
  fullName: WinForge.IPC.PipeMessenger.PipeMessenger
  fullName.vb: WinForge.IPC.PipeMessenger.New
  nameWithType: PipeMessenger.PipeMessenger
  nameWithType.vb: PipeMessenger.New
- uid: WinForge.IPC.PipeMessenger.Dispose
  name: Dispose()
  href: api/WinForge.IPC.PipeMessenger.html#WinForge_IPC_PipeMessenger_Dispose
  commentId: M:WinForge.IPC.PipeMessenger.Dispose
  fullName: WinForge.IPC.PipeMessenger.Dispose()
  nameWithType: PipeMessenger.Dispose()
- uid: WinForge.IPC.PipeMessenger.Dispose*
  name: Dispose
  href: api/WinForge.IPC.PipeMessenger.html#WinForge_IPC_PipeMessenger_Dispose_
  commentId: Overload:WinForge.IPC.PipeMessenger.Dispose
  isSpec: "True"
  fullName: WinForge.IPC.PipeMessenger.Dispose
  nameWithType: PipeMessenger.Dispose
- uid: WinForge.IPC.PipeMessenger.OnMessageReceived
  name: OnMessageReceived
  href: api/WinForge.IPC.PipeMessenger.html#WinForge_IPC_PipeMessenger_OnMessageReceived
  commentId: E:WinForge.IPC.PipeMessenger.OnMessageReceived
  fullName: WinForge.IPC.PipeMessenger.OnMessageReceived
  nameWithType: PipeMessenger.OnMessageReceived
- uid: WinForge.Settings
  name: WinForge.Settings
  href: api/WinForge.Settings.html
  commentId: N:WinForge.Settings
  fullName: WinForge.Settings
  nameWithType: WinForge.Settings
- uid: WinForge.Settings.Application
  name: Application
  href: api/WinForge.Settings.Application.html
  commentId: T:WinForge.Settings.Application
  fullName: WinForge.Settings.Application
  nameWithType: Application
- uid: WinForge.Settings.Application.LogFilePath
  name: LogFilePath
  href: api/WinForge.Settings.Application.html#WinForge_Settings_Application_LogFilePath
  commentId: P:WinForge.Settings.Application.LogFilePath
  fullName: WinForge.Settings.Application.LogFilePath
  nameWithType: Application.LogFilePath
- uid: WinForge.Settings.Application.LogFilePath*
  name: LogFilePath
  href: api/WinForge.Settings.Application.html#WinForge_Settings_Application_LogFilePath_
  commentId: Overload:WinForge.Settings.Application.LogFilePath
  isSpec: "True"
  fullName: WinForge.Settings.Application.LogFilePath
  nameWithType: Application.LogFilePath
- uid: WinForge.Settings.Application.MaxLogFiles
  name: MaxLogFiles
  href: api/WinForge.Settings.Application.html#WinForge_Settings_Application_MaxLogFiles
  commentId: P:WinForge.Settings.Application.MaxLogFiles
  fullName: WinForge.Settings.Application.MaxLogFiles
  nameWithType: Application.MaxLogFiles
- uid: WinForge.Settings.Application.MaxLogFiles*
  name: MaxLogFiles
  href: api/WinForge.Settings.Application.html#WinForge_Settings_Application_MaxLogFiles_
  commentId: Overload:WinForge.Settings.Application.MaxLogFiles
  isSpec: "True"
  fullName: WinForge.Settings.Application.MaxLogFiles
  nameWithType: Application.MaxLogFiles
- uid: WinForge.Settings.Application.ModuleDirectory
  name: ModuleDirectory
  href: api/WinForge.Settings.Application.html#WinForge_Settings_Application_ModuleDirectory
  commentId: P:WinForge.Settings.Application.ModuleDirectory
  fullName: WinForge.Settings.Application.ModuleDirectory
  nameWithType: Application.ModuleDirectory
- uid: WinForge.Settings.Application.ModuleDirectory*
  name: ModuleDirectory
  href: api/WinForge.Settings.Application.html#WinForge_Settings_Application_ModuleDirectory_
  commentId: Overload:WinForge.Settings.Application.ModuleDirectory
  isSpec: "True"
  fullName: WinForge.Settings.Application.ModuleDirectory
  nameWithType: Application.ModuleDirectory
- uid: WinForge.Settings.Persistence
  name: Persistence
  href: api/WinForge.Settings.Persistence.html
  commentId: T:WinForge.Settings.Persistence
  fullName: WinForge.Settings.Persistence
  nameWithType: Persistence
- uid: WinForge.Settings.Persistence.Load
  name: Load()
  href: api/WinForge.Settings.Persistence.html#WinForge_Settings_Persistence_Load
  commentId: M:WinForge.Settings.Persistence.Load
  fullName: WinForge.Settings.Persistence.Load()
  nameWithType: Persistence.Load()
- uid: WinForge.Settings.Persistence.Load*
  name: Load
  href: api/WinForge.Settings.Persistence.html#WinForge_Settings_Persistence_Load_
  commentId: Overload:WinForge.Settings.Persistence.Load
  isSpec: "True"
  fullName: WinForge.Settings.Persistence.Load
  nameWithType: Persistence.Load
- uid: WinForge.Settings.Persistence.Save
  name: Save()
  href: api/WinForge.Settings.Persistence.html#WinForge_Settings_Persistence_Save
  commentId: M:WinForge.Settings.Persistence.Save
  fullName: WinForge.Settings.Persistence.Save()
  nameWithType: Persistence.Save()
- uid: WinForge.Settings.Persistence.Save*
  name: Save
  href: api/WinForge.Settings.Persistence.html#WinForge_Settings_Persistence_Save_
  commentId: Overload:WinForge.Settings.Persistence.Save
  isSpec: "True"
  fullName: WinForge.Settings.Persistence.Save
  nameWithType: Persistence.Save
