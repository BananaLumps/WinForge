### YamlMime:ManagedReference
items:
- uid: WinForge.IPC.HTTPManager
  commentId: T:WinForge.IPC.HTTPManager
  id: HTTPManager
  parent: WinForge.IPC
  children:
  - WinForge.IPC.HTTPManager.ConnectAsync(System.Net.IPEndPoint,System.String,System.Int32)
  - WinForge.IPC.HTTPManager.Dispose
  - WinForge.IPC.HTTPManager.GetConnectedTCPClientPipeNames
  - WinForge.IPC.HTTPManager.ListenForBeaconAsync(System.Int32)
  - WinForge.IPC.HTTPManager.SendToClient(System.String,WinForge.IPC.IPCMessage)
  - WinForge.IPC.HTTPManager.StartServer(System.String)
  - WinForge.IPC.HTTPManager.WaitForBeaconAsync(System.Int32,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: HTTPManager
  nameWithType: HTTPManager
  fullName: WinForge.IPC.HTTPManager
  type: Class
  source:
    id: HTTPManager
    path: C:\Users\micha\source\repos\WinForge.Base\WinForge.Common\IPC.cs
    startLine: 113
  assemblies:
  - WinForge.Common
  namespace: WinForge.IPC
  syntax:
    content: 'public class HTTPManager : IDisposable'
    content.vb: Public Class HTTPManager Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: WinForge.IPC.HTTPManager.GetConnectedTCPClientPipeNames
  commentId: M:WinForge.IPC.HTTPManager.GetConnectedTCPClientPipeNames
  id: GetConnectedTCPClientPipeNames
  parent: WinForge.IPC.HTTPManager
  langs:
  - csharp
  - vb
  name: GetConnectedTCPClientPipeNames()
  nameWithType: HTTPManager.GetConnectedTCPClientPipeNames()
  fullName: WinForge.IPC.HTTPManager.GetConnectedTCPClientPipeNames()
  type: Method
  source:
    id: GetConnectedTCPClientPipeNames
    path: C:\Users\micha\source\repos\WinForge.Base\WinForge.Common\IPC.cs
    startLine: 123
  assemblies:
  - WinForge.Common
  namespace: WinForge.IPC
  syntax:
    content: public static IReadOnlyCollection<string> GetConnectedTCPClientPipeNames()
    return:
      type: System.Collections.Generic.IReadOnlyCollection{System.String}
    content.vb: Public Shared Function GetConnectedTCPClientPipeNames() As IReadOnlyCollection(Of String)
  overload: WinForge.IPC.HTTPManager.GetConnectedTCPClientPipeNames*
- uid: WinForge.IPC.HTTPManager.StartServer(System.String)
  commentId: M:WinForge.IPC.HTTPManager.StartServer(System.String)
  id: StartServer(System.String)
  parent: WinForge.IPC.HTTPManager
  langs:
  - csharp
  - vb
  name: StartServer(string)
  nameWithType: HTTPManager.StartServer(string)
  fullName: WinForge.IPC.HTTPManager.StartServer(string)
  type: Method
  source:
    id: StartServer
    path: C:\Users\micha\source\repos\WinForge.Base\WinForge.Common\IPC.cs
    startLine: 129
  assemblies:
  - WinForge.Common
  namespace: WinForge.IPC
  summary: Starts UDP beacon + TCP server in background.
  example: []
  syntax:
    content: public static void StartServer(string serverPipeName)
    parameters:
    - id: serverPipeName
      type: System.String
    content.vb: Public Shared Sub StartServer(serverPipeName As String)
  overload: WinForge.IPC.HTTPManager.StartServer*
  nameWithType.vb: HTTPManager.StartServer(String)
  fullName.vb: WinForge.IPC.HTTPManager.StartServer(String)
  name.vb: StartServer(String)
- uid: WinForge.IPC.HTTPManager.Dispose
  commentId: M:WinForge.IPC.HTTPManager.Dispose
  id: Dispose
  parent: WinForge.IPC.HTTPManager
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: HTTPManager.Dispose()
  fullName: WinForge.IPC.HTTPManager.Dispose()
  type: Method
  source:
    id: Dispose
    path: C:\Users\micha\source\repos\WinForge.Base\WinForge.Common\IPC.cs
    startLine: 136
  assemblies:
  - WinForge.Common
  namespace: WinForge.IPC
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: WinForge.IPC.HTTPManager.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: WinForge.IPC.HTTPManager.ListenForBeaconAsync(System.Int32)
  commentId: M:WinForge.IPC.HTTPManager.ListenForBeaconAsync(System.Int32)
  id: ListenForBeaconAsync(System.Int32)
  parent: WinForge.IPC.HTTPManager
  langs:
  - csharp
  - vb
  name: ListenForBeaconAsync(int)
  nameWithType: HTTPManager.ListenForBeaconAsync(int)
  fullName: WinForge.IPC.HTTPManager.ListenForBeaconAsync(int)
  type: Method
  source:
    id: ListenForBeaconAsync
    path: C:\Users\micha\source\repos\WinForge.Base\WinForge.Common\IPC.cs
    startLine: 139
  assemblies:
  - WinForge.Common
  namespace: WinForge.IPC
  summary: Listen once for a UDP beacon and return its IPEndPoint.
  example: []
  syntax:
    content: public static Task<IPEndPoint?> ListenForBeaconAsync(int timeoutMs = 35000)
    parameters:
    - id: timeoutMs
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{System.Net.IPEndPoint}
    content.vb: Public Shared Function ListenForBeaconAsync(timeoutMs As Integer = 35000) As Task(Of IPEndPoint)
  overload: WinForge.IPC.HTTPManager.ListenForBeaconAsync*
  nameWithType.vb: HTTPManager.ListenForBeaconAsync(Integer)
  fullName.vb: WinForge.IPC.HTTPManager.ListenForBeaconAsync(Integer)
  name.vb: ListenForBeaconAsync(Integer)
- uid: WinForge.IPC.HTTPManager.ConnectAsync(System.Net.IPEndPoint,System.String,System.Int32)
  commentId: M:WinForge.IPC.HTTPManager.ConnectAsync(System.Net.IPEndPoint,System.String,System.Int32)
  id: ConnectAsync(System.Net.IPEndPoint,System.String,System.Int32)
  parent: WinForge.IPC.HTTPManager
  langs:
  - csharp
  - vb
  name: ConnectAsync(IPEndPoint, string, int)
  nameWithType: HTTPManager.ConnectAsync(IPEndPoint, string, int)
  fullName: WinForge.IPC.HTTPManager.ConnectAsync(System.Net.IPEndPoint, string, int)
  type: Method
  source:
    id: ConnectAsync
    path: C:\Users\micha\source\repos\WinForge.Base\WinForge.Common\IPC.cs
    startLine: 156
  assemblies:
  - WinForge.Common
  namespace: WinForge.IPC
  summary: Connect to server and send our pipe name as JSON handshake.
  example: []
  syntax:
    content: public static Task<TcpClient> ConnectAsync(IPEndPoint serverEndPoint, string clientPipeName, int timeoutMs = 3000)
    parameters:
    - id: serverEndPoint
      type: System.Net.IPEndPoint
    - id: clientPipeName
      type: System.String
    - id: timeoutMs
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{System.Net.Sockets.TcpClient}
    content.vb: Public Shared Function ConnectAsync(serverEndPoint As IPEndPoint, clientPipeName As String, timeoutMs As Integer = 3000) As Task(Of TcpClient)
  overload: WinForge.IPC.HTTPManager.ConnectAsync*
  nameWithType.vb: HTTPManager.ConnectAsync(IPEndPoint, String, Integer)
  fullName.vb: WinForge.IPC.HTTPManager.ConnectAsync(System.Net.IPEndPoint, String, Integer)
  name.vb: ConnectAsync(IPEndPoint, String, Integer)
- uid: WinForge.IPC.HTTPManager.WaitForBeaconAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:WinForge.IPC.HTTPManager.WaitForBeaconAsync(System.Int32,System.Threading.CancellationToken)
  id: WaitForBeaconAsync(System.Int32,System.Threading.CancellationToken)
  parent: WinForge.IPC.HTTPManager
  langs:
  - csharp
  - vb
  name: WaitForBeaconAsync(int, CancellationToken)
  nameWithType: HTTPManager.WaitForBeaconAsync(int, CancellationToken)
  fullName: WinForge.IPC.HTTPManager.WaitForBeaconAsync(int, System.Threading.CancellationToken)
  type: Method
  source:
    id: WaitForBeaconAsync
    path: C:\Users\micha\source\repos\WinForge.Base\WinForge.Common\IPC.cs
    startLine: 243
  assemblies:
  - WinForge.Common
  namespace: WinForge.IPC
  syntax:
    content: public static Task<IPEndPoint?> WaitForBeaconAsync(int timeoutMs = 35000, CancellationToken ct = default)
    parameters:
    - id: timeoutMs
      type: System.Int32
    - id: ct
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Net.IPEndPoint}
    content.vb: Public Shared Function WaitForBeaconAsync(timeoutMs As Integer = 35000, ct As CancellationToken = Nothing) As Task(Of IPEndPoint)
  overload: WinForge.IPC.HTTPManager.WaitForBeaconAsync*
  nameWithType.vb: HTTPManager.WaitForBeaconAsync(Integer, CancellationToken)
  fullName.vb: WinForge.IPC.HTTPManager.WaitForBeaconAsync(Integer, System.Threading.CancellationToken)
  name.vb: WaitForBeaconAsync(Integer, CancellationToken)
- uid: WinForge.IPC.HTTPManager.SendToClient(System.String,WinForge.IPC.IPCMessage)
  commentId: M:WinForge.IPC.HTTPManager.SendToClient(System.String,WinForge.IPC.IPCMessage)
  id: SendToClient(System.String,WinForge.IPC.IPCMessage)
  parent: WinForge.IPC.HTTPManager
  langs:
  - csharp
  - vb
  name: SendToClient(string, IPCMessage)
  nameWithType: HTTPManager.SendToClient(string, IPCMessage)
  fullName: WinForge.IPC.HTTPManager.SendToClient(string, WinForge.IPC.IPCMessage)
  type: Method
  source:
    id: SendToClient
    path: C:\Users\micha\source\repos\WinForge.Base\WinForge.Common\IPC.cs
    startLine: 280
  assemblies:
  - WinForge.Common
  namespace: WinForge.IPC
  syntax:
    content: public static bool SendToClient(string pipeName, IPCMessage message)
    parameters:
    - id: pipeName
      type: System.String
    - id: message
      type: WinForge.IPC.IPCMessage
    return:
      type: System.Boolean
    content.vb: Public Shared Function SendToClient(pipeName As String, message As IPCMessage) As Boolean
  overload: WinForge.IPC.HTTPManager.SendToClient*
  nameWithType.vb: HTTPManager.SendToClient(String, IPCMessage)
  fullName.vb: WinForge.IPC.HTTPManager.SendToClient(String, WinForge.IPC.IPCMessage)
  name.vb: SendToClient(String, IPCMessage)
references:
- uid: WinForge.IPC
  commentId: N:WinForge.IPC
  href: WinForge.html
  name: WinForge.IPC
  nameWithType: WinForge.IPC
  fullName: WinForge.IPC
  spec.csharp:
  - uid: WinForge
    name: WinForge
    href: WinForge.html
  - name: .
  - uid: WinForge.IPC
    name: IPC
    href: WinForge.IPC.html
  spec.vb:
  - uid: WinForge
    name: WinForge
    href: WinForge.html
  - name: .
  - uid: WinForge.IPC
    name: IPC
    href: WinForge.IPC.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: WinForge.IPC.HTTPManager.GetConnectedTCPClientPipeNames*
  commentId: Overload:WinForge.IPC.HTTPManager.GetConnectedTCPClientPipeNames
  href: WinForge.IPC.HTTPManager.html#WinForge_IPC_HTTPManager_GetConnectedTCPClientPipeNames
  name: GetConnectedTCPClientPipeNames
  nameWithType: HTTPManager.GetConnectedTCPClientPipeNames
  fullName: WinForge.IPC.HTTPManager.GetConnectedTCPClientPipeNames
- uid: System.Collections.Generic.IReadOnlyCollection{System.String}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<string>
  nameWithType: IReadOnlyCollection<string>
  fullName: System.Collections.Generic.IReadOnlyCollection<string>
  nameWithType.vb: IReadOnlyCollection(Of String)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of String)
  name.vb: IReadOnlyCollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: WinForge.IPC.HTTPManager.StartServer*
  commentId: Overload:WinForge.IPC.HTTPManager.StartServer
  href: WinForge.IPC.HTTPManager.html#WinForge_IPC_HTTPManager_StartServer_System_String_
  name: StartServer
  nameWithType: HTTPManager.StartServer
  fullName: WinForge.IPC.HTTPManager.StartServer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: WinForge.IPC.HTTPManager.Dispose*
  commentId: Overload:WinForge.IPC.HTTPManager.Dispose
  href: WinForge.IPC.HTTPManager.html#WinForge_IPC_HTTPManager_Dispose
  name: Dispose
  nameWithType: HTTPManager.Dispose
  fullName: WinForge.IPC.HTTPManager.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: WinForge.IPC.HTTPManager.ListenForBeaconAsync*
  commentId: Overload:WinForge.IPC.HTTPManager.ListenForBeaconAsync
  href: WinForge.IPC.HTTPManager.html#WinForge_IPC_HTTPManager_ListenForBeaconAsync_System_Int32_
  name: ListenForBeaconAsync
  nameWithType: HTTPManager.ListenForBeaconAsync
  fullName: WinForge.IPC.HTTPManager.ListenForBeaconAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.Tasks.Task{System.Net.IPEndPoint}
  commentId: T:System.Threading.Tasks.Task{System.Net.IPEndPoint}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IPEndPoint>
  nameWithType: Task<IPEndPoint>
  fullName: System.Threading.Tasks.Task<System.Net.IPEndPoint>
  nameWithType.vb: Task(Of IPEndPoint)
  fullName.vb: System.Threading.Tasks.Task(Of System.Net.IPEndPoint)
  name.vb: Task(Of IPEndPoint)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Net.IPEndPoint
    name: IPEndPoint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.ipendpoint
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Net.IPEndPoint
    name: IPEndPoint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.ipendpoint
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: WinForge.IPC.HTTPManager.ConnectAsync*
  commentId: Overload:WinForge.IPC.HTTPManager.ConnectAsync
  href: WinForge.IPC.HTTPManager.html#WinForge_IPC_HTTPManager_ConnectAsync_System_Net_IPEndPoint_System_String_System_Int32_
  name: ConnectAsync
  nameWithType: HTTPManager.ConnectAsync
  fullName: WinForge.IPC.HTTPManager.ConnectAsync
- uid: System.Net.IPEndPoint
  commentId: T:System.Net.IPEndPoint
  parent: System.Net
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.ipendpoint
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: System.Threading.Tasks.Task{System.Net.Sockets.TcpClient}
  commentId: T:System.Threading.Tasks.Task{System.Net.Sockets.TcpClient}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TcpClient>
  nameWithType: Task<TcpClient>
  fullName: System.Threading.Tasks.Task<System.Net.Sockets.TcpClient>
  nameWithType.vb: Task(Of TcpClient)
  fullName.vb: System.Threading.Tasks.Task(Of System.Net.Sockets.TcpClient)
  name.vb: Task(Of TcpClient)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Net.Sockets.TcpClient
    name: TcpClient
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.sockets.tcpclient
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Net.Sockets.TcpClient
    name: TcpClient
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.sockets.tcpclient
  - name: )
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
- uid: WinForge.IPC.HTTPManager.WaitForBeaconAsync*
  commentId: Overload:WinForge.IPC.HTTPManager.WaitForBeaconAsync
  href: WinForge.IPC.HTTPManager.html#WinForge_IPC_HTTPManager_WaitForBeaconAsync_System_Int32_System_Threading_CancellationToken_
  name: WaitForBeaconAsync
  nameWithType: HTTPManager.WaitForBeaconAsync
  fullName: WinForge.IPC.HTTPManager.WaitForBeaconAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: WinForge.IPC.HTTPManager.SendToClient*
  commentId: Overload:WinForge.IPC.HTTPManager.SendToClient
  href: WinForge.IPC.HTTPManager.html#WinForge_IPC_HTTPManager_SendToClient_System_String_WinForge_IPC_IPCMessage_
  name: SendToClient
  nameWithType: HTTPManager.SendToClient
  fullName: WinForge.IPC.HTTPManager.SendToClient
- uid: WinForge.IPC.IPCMessage
  commentId: T:WinForge.IPC.IPCMessage
  parent: WinForge.IPC
  href: WinForge.IPC.IPCMessage.html
  name: IPCMessage
  nameWithType: IPCMessage
  fullName: WinForge.IPC.IPCMessage
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
